workflows:
    ionic-capacitor-ios-workflow:
        name: Ionic Capacitor iOS Workflow
        max_build_duration: 120
        instance_type: mac_pro
        environment:
            vars:
                # Ionic Xcode worskspace and scheme
                XCODE_WORKSPACE: "ios/App/App.xcworkspace"
                XCODE_SCHEME: "App"
                # Manual Code Signing
                # CM_CERTIFICATE: Encrypted(...) # <-- Put your encrypted certificate file here
                # CM_CERTIFICATE_PASSWORD: Encrypted(...) # <-- Put your encrypted certificate password here
                # CM_PROVISIONING_PROFILE: Encrypted(...) # <-- Put your encrypted provisioning profile here
                #
                # Automatic Code Signing 
                # https://docs.codemagic.io/yaml/distribution/
                # https://appstoreconnect.apple.com/access/api
                APP_STORE_CONNECT_ISSUER_ID: 5a111111-####-####-####-############ # <-- Put your App Store Connect Issuer Id here
                APP_STORE_CONNECT_KEY_IDENTIFIER: LY######22 # <-- Put your App Store Connect Key Identifier here
                APP_STORE_CONNECT_PRIVATE_KEY: Encrypted(...) # <-- Put your App Store Connect Private Key here
                CERTIFICATE_PRIVATE_KEY: Encrypted(...) # <-- Put your Certificate Private key here
            node: latest
            xcode: latest
            cocoapods: default
        triggering:
            events:
                - push
            branch_patterns:
                - pattern: develop
                  include: true
                  source: true
        scripts:
            - name: Install npm dependencies for Ionic project
              script: |
                npm install
            - name: Cocoapods installation
              script: |
                cd ios/App && pod install
            - name: Update dependencies and copy web assets to native project
              script: |
                # npx cap copy # <- use this is you don't need to update native dependencies
                npx cap sync # <- update native dependencies and copy web assets to native project
            - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
              script: |
                keychain initialize
            # - name: Set up Provisioning profiles from environment variables (Use with manual code signing)
            #   script: |
            #     PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
            #     mkdir -p "$PROFILES_HOME"
            #     PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
            #     echo ${CM_PROVISIONING_PROFILE} | base64 --decode > "$PROFILE_PATH"
            #     echo "Saved provisioning profile $PROFILE_PATH"
            - name: Fetch signing files
              script: |
                # app-store-connect fetch-signing-files "com.nevercode.ncionicapp" --type IOS_APP_STORE --create
                app-store-connect fetch-signing-files $(xcode-project detect-bundle-id) --type IOS_APP_STORE --create
            # - name: Set up signing certificate (Use with manual code signing)
            #   script: |
            #     echo $CM_CERTIFICATE | base64 --decode > /tmp/certificate.p12
            #     keychain add-certificates --certificate /tmp/certificate.p12 --certificate-password $CM_CERTIFICATE_PASSWORD
           
            - name: Add certificates to keychain
              script: |
                keychain add-certificates
            - name: Increment build number
              script: |
                #!/bin/sh
                set -e
                set -x
                cd $FCI_BUILD_DIR/ios/App
                agvtool new-version -all $(($BUILD_NUMBER +1))
            - name: Set up code signing settings on Xcode project
              script: |
                xcode-project use-profiles
            - name: Build ipa for distribution
              script: |
                xcode-project build-ipa --workspace "$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME"
        artifacts:
            - build/ios/ipa/*.ipa
            - /tmp/xcodebuild_logs/*.log
            - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
            - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
        publishing:
          app_store_connect:
            apple_id: yourAppleId@example.com # <- put your Apple Id here
            password: Encrypted(...) # <-- Put your App Specific Password. For more information visit: https://support.apple.com/en-us/HT204397
          email:
            recipients:
                - user_one@example.com
                - user_two@example.com
            notify:
                success: false     # To not receive a notification when a build succeeds
                failure: false     # To not receive a notification when a build fails
    ionic-capacitor-android-workflow:
        name: Ionic Capacitor Android Workflow
        max_build_duration: 120
        instance_type: mac_pro
        environment:
            vars:
              # Android Keystore environment variables
              CM_KEYSTORE: Encrypted(...) # <-- Put your encrypted keystore file here
              CM_KEYSTORE_PASSWORD: Encrypted(...) # <-- Put your encrypted keystore password here
              CM_KEY_ALIAS_PASSWORD: Encrypted(...) # <-- Put your encrypted keystore alias password here
              CM_KEY_ALIAS_USERNAME: Encrypted(...) # <-- Put your encrypted keystore alias username here
            node: latest
        triggering:
            events:
                - push
                - tag
                - pull_request
            branch_patterns:
                - pattern: develop
                  include: true
                  source: true
        scripts:
            - name: Install npm dependencies for Ionic project
              script: |
                npm install
            - name: Set Android SDK location
              script: |
                echo "sdk.dir=$ANDROID_SDK_ROOT" > "$FCI_BUILD_DIR/android/local.properties"
            - name: Set up keystore
              script: |
                echo $CM_KEYSTORE | base64 --decode > /tmp/keystore.keystore
                cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
                storePassword=$CM_KEYSTORE_PASSWORD
                keyPassword=$CM_KEY_ALIAS_PASSWORD
                keyAlias=$CM_KEY_ALIAS_USERNAME
                storeFile=/tmp/keystore.keystore
                EOF
            - name: Update dependencies and copy web assets to native project
              script: |
                # npx cap copy # <- use this is you don't need to update native dependencies
                npx cap sync # <- update native dependencies and copy web assets to native project
            - name: Build Android release
              script: |
                cd android
                ./gradlew assembleRelease
        artifacts:
            - android/app/build/outputs/**/*.apk
        publishing:
            google_play:
                credentials: Encrypted(...) # <- Put your encrypted JSON key file for Google Play service account
                track: internal
            email:
                recipients:
                    - user_one@example.com
                    - user_two@example.com
                notify:
                  success: true     # To not receive a notification when a build succeeds
                  failure: false     # To not receive a notification when a build fails
